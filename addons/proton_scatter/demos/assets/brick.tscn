[gd_scene load_steps=9 format=3 uid="uid://b4ted6l27vuyd"]

[ext_resource type="PackedScene" uid="uid://d1d1fag0m04yc" path="res://addons/proton_scatter/demos/assets/models/brick.glb" id="1_bkmk2"]

[sub_resource type="Shader" id="Shader_jy8e8"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.beta2's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform sampler2D texture_normal : hint_roughness_normal, filter_linear_mipmap, repeat_enable;
uniform float normal_scale : hint_range(-16.0, 16.0);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;

	// Normal Map: Enabled
	NORMAL_MAP = texture(texture_normal, base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
}
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_nhvsk"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_p5anh"]
noise = SubResource("FastNoiseLite_nhvsk")

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ahthd"]
frequency = 0.052
fractal_gain = -1.46

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_wutbd"]
noise = SubResource("FastNoiseLite_ahthd")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8u6kk"]
render_priority = 0
shader = SubResource("Shader_jy8e8")
shader_parameter/albedo = Color(0.710715, 0.404297, 0.684184, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_p5anh")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_wutbd")

[sub_resource type="BoxShape3D" id="BoxShape3D_0rrnn"]
size = Vector3(0.4, 0.4, 0.4)

[node name="brick" instance=ExtResource("1_bkmk2")]

[node name="Cube" parent="." index="0"]
material_override = SubResource("ShaderMaterial_8u6kk")

[node name="StaticBody3D" type="StaticBody3D" parent="." index="1"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="StaticBody3D" index="0"]
shape = SubResource("BoxShape3D_0rrnn")
